
class Solution {
public:
        
     bool match(string word, string pattern)
     {
             map<char,char> m1;
             map<char,char> m2;
             
             for(int i=0; i < word.length() ; i++)
             {
                     char w = word[i];
                     char p = pattern[i];
                     
                     if(m1.find(w) == m1.end())
                             m1.insert(pair<char,char>(w,p));
                     if(m2.find(p) == m2.end())
                             m2.insert(pair<char,char>(p,w));
                     
                     if(m1[w] != p || m2[p] != w)
                             return false;                     
             }
             
             return true;
     }
        
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
            
            vector<string> results;
            
            for(auto word : words)
                    if(match(word,pattern))
                            results.push_back(word);
            
            return results;                      
    }
};
